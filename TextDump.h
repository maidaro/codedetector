/*
 *     Generated by class-dump 3.1.2.
 *
 *     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2007 by Steve Nygard.
 */

typedef struct {
    int _field1;
    double _field2;
    double _field3;
    id _field4;
    char _field5;
    id _field6;
    id _field7;
    int _field8;
} CDAnonymousStruct1;

/*
 * File: TextEdit
 * Arch: Intel 80x86 (i386)
 */

@interface Document : NSDocument
{
    BOOL uniqueZone;
    BOOL setUpPrintInfoDefaults;
    NSTextStorage *textStorage;
    float scaleFactor;
    BOOL isReadOnly;
    NSColor *backgroundColor;
    float hyphenationFactor;
    struct _NSSize viewSize;
    BOOL hasMultiplePages;
    NSString *author;
    NSString *copyright;
    NSString *company;
    NSString *title;
    NSString *subject;
    NSString *comment;
    NSString *keywords;
    BOOL openedIgnoringRichText;
    unsigned int documentEncoding;
    BOOL convertedDocument;
    BOOL lossyDocument;
    BOOL transient;
    NSURL *defaultDestination;
    unsigned int documentEncodingForSaving;
}

- (id)init;
- (id)textDocumentTypeToTextEditDocumentTypeMappingTable;
- (BOOL)readFromURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (BOOL)readFromURL:(id)fp8 ofType:(id)fp12 encoding:(unsigned int)fp16 ignoreRTF:(BOOL)fp20 ignoreHTML:(BOOL)fp24 error:(id *)fp28;
- (id)defaultTextAttributes:(BOOL)fp8;
- (unsigned int)suggestedDocumentEncoding;
- (BOOL)writeToURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;
- (id)fileWrapperOfType:(id)fp8 error:(id *)fp12;
- (id)packageFileWrapperOrDataOfType:(id)fp8 error:(id *)fp12;
- (void)dealloc;
- (float)scaleFactor;
- (void)setScaleFactor:(float)fp8;
- (struct _NSSize)viewSize;
- (void)setViewSize:(struct _NSSize)fp8;
- (void)setReadOnly:(BOOL)fp8;
- (BOOL)isReadOnly;
- (void)setBackgroundColor:(id)fp8;
- (id)backgroundColor;
- (id)textStorage;
- (struct _NSSize)paperSize;
- (void)setPaperSize:(struct _NSSize)fp8;
- (void)setHyphenationFactor:(float)fp8;
- (float)hyphenationFactor;
- (unsigned int)encoding;
- (void)setEncoding:(unsigned int)fp8;
- (unsigned int)encodingForSaving;
- (void)setEncodingForSaving:(unsigned int)fp8;
- (BOOL)isConverted;
- (void)setConverted:(BOOL)fp8;
- (BOOL)isLossy;
- (void)setLossy:(BOOL)fp8;
- (BOOL)isOpenedIgnoringRichText;
- (void)setOpenedIgnoringRichText:(BOOL)fp8;
- (BOOL)isTransient;
- (void)setTransient:(BOOL)fp8;
- (BOOL)isTransientAndCanBeReplaced;
- (void)setRichText:(BOOL)fp8;
- (BOOL)isRichText;
- (id)documentPropertyToAttributeNameMappings;
- (id)knownDocumentProperties;
- (BOOL)hasDocumentProperties;
- (void)clearDocumentProperties;
- (void)setDocumentPropertiesToDefaults;
- (void)setValue:(id)fp8 forDocumentProperty:(id)fp12;
- (void)setValue:(id)fp8 forKey:(id)fp12;
- (id)printOperationWithSettings:(id)fp8 error:(id *)fp12;
- (id)printInfo;
- (void)toggleReadOnly:(id)fp8;
- (BOOL)toggleRichWillLoseInformation;
- (BOOL)hasMultiplePages;
- (void)setHasMultiplePages:(BOOL)fp8;
- (void)togglePageBreaks:(id)fp8;
- (void)toggleHyphenation:(id)fp8;
- (void)appendPlainTextExtensionChanged:(id)fp8;
- (void)encodingPopupChanged:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;
- (void)setTextStorage:(id)fp8;
- (void)revertDocumentToSaved:(id)fp8;
- (BOOL)revertToContentsOfURL:(id)fp8 ofType:(id)fp12 error:(id *)fp16;

@end

@interface Document (TextEditNSDocumentOverrides)
- (id)initForURL:(id)fp8 withContentsOfURL:(id)fp12 ofType:(id)fp16 error:(id *)fp20;
- (void)makeWindowControllers;
- (id)writableTypesForSaveOperation:(unsigned int)fp8;
- (BOOL)keepBackupFile;
- (void)updateChangeCount:(unsigned int)fp8;
- (BOOL)saveToURL:(id)fp8 ofType:(id)fp12 forSaveOperation:(unsigned int)fp16 error:(id *)fp20;
- (id)autosavingFileType;
- (void)setFileURL:(id)fp8;
- (void)didPresentErrorWithRecovery:(BOOL)fp8 contextInfo:(void *)fp12;
- (void)attemptRecoveryFromError:(id)fp8 optionIndex:(unsigned int)fp12 delegate:(id)fp16 didRecoverSelector:(SEL)fp20 contextInfo:(void *)fp24;
- (void)saveDocumentWithDelegate:(id)fp8 didSaveSelector:(SEL)fp12 contextInfo:(void *)fp16;
- (BOOL)shouldRunSavePanelWithAccessoryView;
- (BOOL)prepareSavePanel:(id)fp8;
- (id)displayName;
@end

@interface Controller : NSObject
{
}

- (void)applicationDidFinishLaunching:(id)fp8;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)applicationWillTerminate:(id)fp8;
- (void)openFile:(id)fp8 userData:(id)fp12 error:(id *)fp16;
- (void)openSelection:(id)fp8 userData:(id)fp12 error:(id *)fp16;

@end

@interface Controller (AppleSelfTestSupport)
- (void)endTest:(CDAnonymousStruct1 *)fp8;
- (void)application:(id)fp8 runTest:(unsigned int)fp12 duration:(double)fp16;
- (void)doOneTest:(id)fp8;
@end

@interface ScalingScrollView : NSScrollView
{
    NSPopUpButton *_scalePopUpButton;
    float scaleFactor;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (void)makeScalePopUpButton;
- (void)tile;
- (void)drawRect:(struct _NSRect)fp8;
- (void)scalePopUpAction:(id)fp8;
- (float)scaleFactor;
- (void)setScaleFactor:(float)fp8;
- (void)setScaleFactor:(float)fp8 adjustPopup:(BOOL)fp12;
- (void)setHasHorizontalScroller:(BOOL)fp8;

@end

@interface MultiplePageView : NSView
{
    NSPrintInfo *printInfo;
    NSColor *lineColor;
    NSColor *marginColor;
    unsigned int numPages;
}

- (id)initWithFrame:(struct _NSRect)fp8;
- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)updateFrame;
- (void)setPrintInfo:(id)fp8;
- (id)printInfo;
- (void)setNumberOfPages:(unsigned int)fp8;
- (unsigned int)numberOfPages;
- (float)pageSeparatorHeight;
- (void)dealloc;
- (struct _NSSize)documentSizeInPage;
- (struct _NSRect)documentRectForPageNumber:(unsigned int)fp8;
- (struct _NSRect)pageRectForPageNumber:(unsigned int)fp8;
- (void)setLineColor:(id)fp8;
- (id)lineColor;
- (void)setMarginColor:(id)fp8;
- (id)marginColor;
- (void)drawRect:(struct _NSRect)fp8;
- (BOOL)knowsPageRange:(struct _NSRange *)fp8;
- (struct _NSRect)rectForPage:(int)fp8;
- (struct _NSPoint)locationOfPrintRect:(struct _NSRect)fp8;

@end

@interface Preferences : NSObject
{
    id richTextFontNameField;
    id plainTextFontNameField;
    id deleteBackupButton;
    id addExtensionToNewPlainTextFilesButton;
    id richTextMatrix;
    id showPageBreaksButton;
    id windowWidthField;
    id windowHeightField;
    id plainTextEncodingForReadPopup;
    id plainTextEncodingForWritePopup;
    id tabWidthField;
    id ignoreRichTextButton;
    id ignoreHTMLButton;
    id checkSpellingAsYouTypeButton;
    id checkGrammarWithSpellingButton;
    id showRulerButton;
    id numberPagesWhenPrintingButton;
    id smartCopyPasteButton;
    id smartQuotesButton;
    id smartLinksButton;
    id authorPropertyField;
    id companyPropertyField;
    id copyrightPropertyField;
    id HTMLDocumentTypePopUp;
    id HTMLStylingPopUp;
    id HTMLEncodingPopUp;
    id preserveWhiteSpaceButton;
    id panel;
    NSDictionary *curValues;
    NSDictionary *origValues;
    NSMutableDictionary *displayedValues;
}

+ (id)sharedInstance;
+ (id)objectForKey:(id)fp8;
+ (void)saveDefaults;
+ (id)preferencesFromDefaults;
+ (void)savePreferencesToDefaults:(id)fp8;
- (id)init;
- (void)dealloc;
- (void)saveDefaults;
- (id)preferences;
- (void)showPanel:(id)fp8;
- (void)updateUI;
- (void)miscChanged:(id)fp8;
- (void)changeRichTextFont:(id)fp8;
- (void)changePlainTextFont:(id)fp8;
- (void)changeFont:(id)fp8;
- (void)commitDisplayedValues;
- (void)discardDisplayedValues;
- (void)ok:(id)fp8;
- (void)revertToDefault:(id)fp8;
- (void)revert:(id)fp8;
- (void)windowWillClose:(id)fp8;

@end

@interface EncodingManager : NSObject
{
    NSMatrix *encodingMatrix;
    NSArray *encodings;
}

+ (id)sharedInstance;
+ (id)allAvailableStringEncodings;
- (id)init;
- (void)dealloc;
- (void)setupEncodingsList;
- (void)setupPopUp:(id)fp8 selectedEncoding:(unsigned int)fp12 withDefaultEntry:(BOOL)fp16;
- (id)enabledEncodings;
- (void)noteEncodingListChange:(BOOL)fp8 updateList:(BOOL)fp12 postNotification:(BOOL)fp16;
- (BOOL)worksWhenModal;
- (void)showPanel:(id)fp8;
- (void)encodingListChanged:(id)fp8;
- (void)clearAll:(id)fp8;
- (void)selectAll:(id)fp8;
- (void)revertToDefault:(id)fp8;

@end

@interface EncodingPopUpButton : NSPopUpButton
{
    unsigned int defaultEncoding;
    BOOL hasDefaultEntry;
    id accessibilityTitleUIElement;
}

- (void)awakeFromNib;
- (void)setEncoding:(unsigned int)fp8 defaultEntry:(BOOL)fp12;
- (void)dealloc;
- (void)encodingsListChanged:(id)fp8;

@end

@interface EncodingPopUpButtonCell : NSPopUpButtonCell
{
}

- (void)selectItemAtIndex:(int)fp8;

@end

@interface DocumentController : NSDocumentController
{
    BOOL useCustomSettingsForOptions;
    unsigned int lastSelectedEncoding;
    BOOL lastSelectedIgnoreHTML;
    BOOL lastSelectedIgnoreRich;
}

+ (id)encodingAccessory:(unsigned int)fp8 includeDefaultEntry:(BOOL)fp12 encodingPopUp:(id *)fp16 checkBox:(id *)fp20;
- (id)openDocumentWithContentsOfPasteboard:(id)fp8 display:(BOOL)fp12 error:(id *)fp16;
- (id)openUntitledDocumentAndDisplay:(BOOL)fp8 error:(id *)fp12;
- (id)transientDocumentToReplace;
- (void)replaceTransientDocument:(id)fp8 withDocument:(id)fp12 display:(BOOL)fp16;
- (id)openDocumentWithContentsOfURL:(id)fp8 display:(BOOL)fp12 error:(id *)fp16;
- (void)addDocument:(id)fp8;
- (void)openDocument:(id)fp8;
- (int)runModalOpenPanel:(id)fp8 forTypes:(id)fp12;
- (unsigned int)lastSelectedEncoding;
- (BOOL)lastSelectedIgnoreHTML;
- (BOOL)lastSelectedIgnoreRich;
- (id)defaultType;

@end

@interface OpenSaveAccessoryOwner : NSObject
{
    NSView *accessoryView;
    EncodingPopUpButton *encodingPopUp;
    NSButton *checkBox;
}

@end

@interface DocumentWindowController : NSWindowController
{
    ScalingScrollView *scrollView;
    NSLayoutManager *layoutMgr;
    BOOL hasMultiplePages;
    BOOL rulerIsBeingDisplayed;
    BOOL isSettingSize;
}

- (id)init;
- (void)dealloc;
- (void)setDocument:(id)fp8;
- (void)breakUndoCoalescing;
- (id)layoutManager;
- (id)firstTextView;
- (void)setupInitialTextViewSharedState;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)setupTextViewForDocument;
- (void)printInfoUpdated;
- (void)showRulerDelayed:(BOOL)fp8;
- (void)showRuler:(id)fp8;
- (void)removeAttachments;
- (void)updateForRichTextAndRulerState;
- (void)convertTextForRichTextStateRemoveAttachments:(BOOL)fp8;
- (unsigned int)numberOfPages;
- (void)addPage;
- (void)removePage;
- (id)documentView;
- (void)setHasMultiplePages:(BOOL)fp8 force:(BOOL)fp12;
- (void)resizeWindowForViewSize:(struct _NSSize)fp8;
- (void)setupWindowForDocument;
- (void)windowDidLoad;
- (void)setDocumentEdited:(BOOL)fp8;
- (void)doForegroundLayoutToCharacterIndex:(unsigned int)fp8;
- (void)doToggleRichWithNewURL:(id)fp8;
- (void)toggleRich:(id)fp8;
- (void)didEndToggleRichSheet:(id)fp8 returnCode:(int)fp12 contextInfo:(void *)fp16;

@end

@interface DocumentWindowController (NSMenuValidation)
- (BOOL)validateMenuItem:(id)fp8;
@end

@interface DocumentWindowController (Delegation)
- (struct _NSRect)windowWillUseStandardFrame:(id)fp8 defaultFrame:(struct _NSRect)fp12;
- (void)windowDidResize:(id)fp8;
- (void)windowDidMove:(id)fp8;
- (BOOL)textView:(id)fp8 clickedOnLink:(id)fp12 atIndex:(unsigned int)fp16;
- (void)textView:(id)fp8 doubleClickedOnCell:(id)fp12 inRect:(struct _NSRect)fp16;
- (id)textView:(id)fp8 writablePasteboardTypesForCell:(id)fp12 atIndex:(unsigned int)fp16;
- (BOOL)textView:(id)fp8 writeCell:(id)fp12 atIndex:(unsigned int)fp16 toPasteboard:(id)fp20 type:(id)fp24;
- (void)layoutManager:(id)fp8 didCompleteLayoutForTextContainer:(id)fp12 atEnd:(BOOL)fp16;
@end

@interface LinePanelController : NSWindowController
{
    NSTextField *lineField;
}

- (id)init;
- (BOOL)parseLineDescription:(id)fp8 fromLineSpec:(int *)fp12 toLineSpec:(int *)fp16 relative:(int *)fp20;
- (BOOL)getRange:(struct _NSRange *)fp8 inTextView:(id)fp12 fromLineSpec:(int)fp16 toLineSpec:(int)fp20 relative:(int)fp24;
- (BOOL)selectLinesUsingDescription:(id)fp8 error:(id *)fp12;
- (void)lineFieldChanged:(id)fp8;
- (void)selectClicked:(id)fp8;

@end

@interface DocumentPropertiesPanelController : NSWindowController
{
    id documentObjectController;
    id inspectedDocument;
}

- (id)init;
- (void)dealloc;
- (void)activeDocumentChanged;
- (void)observeValueForKeyPath:(id)fp8 ofObject:(id)fp12 change:(id)fp16 context:(void *)fp20;
- (void)objectDidBeginEditing:(id)fp8;
- (void)objectDidEndEditing:(id)fp8;
- (void)windowDidLoad;
- (void)documentPropertiesPanelDidResignKey:(id)fp8;
- (void)toggleWindow:(id)fp8;
- (BOOL)validateMenuItem:(id)fp8;

@end

